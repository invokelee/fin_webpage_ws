<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1385.vb_58b_86ea_fff1">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@744.v5b_556ee7c253">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72">
      <stagesUUID>9daab8eb-4d4f-42c4-8be5-20e40e8a5ec9</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2218.v56d0cda_37c72">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Login to Docker Hub</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">
                cat /home/invokelee/final_project/ros2_ws/src/fin_devops_docker/.my_password.txt | 
                docker login --username invokelee --password-stdin
                </value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Build Docker image</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">
                cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                docker build -f final_base_docker/Dockerfile -t invokelee/ros2-final-project-base:1.5 /home/invokelee/final_project
                </value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Docker compose up and Start up the service</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">
                DK_SIM_PS=`docker ps | grep &quot;fin_devops_docker-sim_&quot; | awk &apos;{print $1}&apos;`
                DK_REAL_PS=`docker ps | grep &quot;fin_devops_docker-real_&quot; | awk &apos;{print $1}&apos;`
                if [ ! -z &quot;$DK_SIM_PS&quot; -a &quot;$DK_SIM_PS&quot; != &quot; &quot; ]; then
                    echo &quot;Service is running in simulation... Now it will be restarted&quot;
                    cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                    docker compose -f sim_final_docker_compose.yml restart
                elif [ ! -z &quot;$DK_REAL_PS&quot; -a &quot;$DK_REAL_PS&quot; != &quot; &quot; ]; then
                    echo &quot;Service is running in real robot... Now it will be restarted&quot;
                    cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                    docker compose -f real_final_docker_compose.yml restart
                else
                    echo &quot;Service is not running... Nothing will happen&quot;
                fi
                </value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Done</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">
                echo &quot;Final Project(Simulation / Real Robot) - Docker build and compose up Pipeline job completed !&quot;
                </value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>9daab8eb-4d4f-42c4-8be5-20e40e8a5ec9</uuid>
          </stages>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1380.va_435002fa_924">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.git.util.BuildData plugin="git@5.2.2">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/main</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@4.7.0">
              <sha1>85be826718a8c3613f8b03cdf8e1fc127c620444</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/main</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>10</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/invokelee/fin_ros2_ws.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@427.v4ca_6512e7df1">
      <revisionStates>
        <entry>
          <string>git https://github.com/invokelee/fin_ros2_ws.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
  </actions>
  <queueId>18</queueId>
  <timestamp>1733176368765</timestamp>
  <startTime>1733176368775</startTime>
  <result>SUCCESS</result>
  <duration>8185</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
    agent any 
    stages {
        stage(&apos;Login to Docker Hub&apos;) {
            steps {
                sh &apos;&apos;&apos;
                cat /home/invokelee/final_project/ros2_ws/src/fin_devops_docker/.my_password.txt | 
                docker login --username invokelee --password-stdin
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Build Docker image&apos;) {
            steps {
                sh &apos;&apos;&apos;
                cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                docker build -f final_base_docker/Dockerfile -t invokelee/ros2-final-project-base:1.5 /home/invokelee/final_project
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Docker compose up and Start up the service&apos;) {
            steps {
                sh &apos;&apos;&apos;
                DK_SIM_PS=`docker ps | grep &quot;fin_devops_docker-sim_&quot; | awk &apos;{print $1}&apos;`
                DK_REAL_PS=`docker ps | grep &quot;fin_devops_docker-real_&quot; | awk &apos;{print $1}&apos;`
                if [ ! -z &quot;$DK_SIM_PS&quot; -a &quot;$DK_SIM_PS&quot; != &quot; &quot; ]; then
                    echo &quot;Service is running in simulation... Now it will be restarted&quot;
                    cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                    docker compose -f sim_final_docker_compose.yml restart
                elif [ ! -z &quot;$DK_REAL_PS&quot; -a &quot;$DK_REAL_PS&quot; != &quot; &quot; ]; then
                    echo &quot;Service is running in real robot... Now it will be restarted&quot;
                    cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                    docker compose -f real_final_docker_compose.yml restart
                else
                    echo &quot;Service is not running... Nothing will happen&quot;
                fi
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Done&apos;) {
            steps {
                sh &apos;&apos;&apos;
                echo &quot;Final Project(Simulation / Real Robot) - Docker build and compose up Pipeline job completed !&quot;
                &apos;&apos;&apos;
            }
        }
    }
}</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>401544008</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>740833317</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>2006863239</long>
      </entry>
      <entry>
        <string>run</string>
        <long>2193664240</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>253739712</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>578591912</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set"/>
    <sandbox>true</sandbox>
    <iota>36</iota>
    <head>1:36</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@5.2.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/invokelee/fin_ros2_ws.git</url>
            <credentialsId>913803a4-7956-4652-98c3-99c6bb19fea0</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/main</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/home/invokelee/final_project/webpage_ws/.jenkins/workspace/sim_rb1_robot_cicd_pipeline</workspace>
      <changelogFile>/home/invokelee/final_project/webpage_ws/.jenkins/jobs/sim_rb1_robot_cicd_pipeline/builds/10/changelog941902844675624336.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>