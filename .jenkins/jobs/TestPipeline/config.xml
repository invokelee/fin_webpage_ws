<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1385.vb_58b_86ea_fff1">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Final Project CI-DI Jenkins Pipeline Job -test</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3996.va_f5c1799f978">
    <script>pipeline {
    agent any 
    stages {
        stage(&apos;Login to Docker Hub&apos;) {
            steps {
                sh &apos;&apos;&apos;
                cat /home/invokelee/final_project/ros2_ws/src/fin_devops_docker/.my_password.txt | 
                docker login --username invokelee --password-stdin
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Build Docker image&apos;) {
            steps {
                sh &apos;&apos;&apos;
                cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                docker build -f final_base_docker/Dockerfile -t invokelee/ros2-final-project-base:1.5 /home/invokelee/final_project
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Docker compose up and Start up the service&apos;) {
            steps {
                sh &apos;&apos;&apos;
                DK_SIM_PS=`docker ps | grep &quot;fin_devops_docker-sim_&quot; | awk &apos;{print $1}&apos;`
                DK_REAL_PS=`docker ps | grep &quot;fin_devops_docker-real_&quot; | awk &apos;{print $1}&apos;`
                if [ ! -z &quot;$DK_SIM_PS&quot; -a &quot;$DK_SIM_PS&quot; != &quot; &quot; ]; then
                    echo &quot;Service is running in simulation... Now it will be restarted&quot;
                    cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                    docker compose -f sim_final_docker_compose.yml restart
                elif [ ! -z &quot;$DK_REAL_PS&quot; -a &quot;$DK_REAL_PS&quot; != &quot; &quot; ]; then
                    echo &quot;Service is running in real robot... Now it will be restarted&quot;
                    cd /home/invokelee/final_project/ros2_ws/src/fin_devops_docker
                    docker compose -f real_final_docker_compose.yml restart
                else
                    echo &quot;Service is not running... Nothing will happen&quot;
                fi
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Done&apos;) {
            steps {
                sh &apos;&apos;&apos;
                echo &quot;Final Project in Simulation - Docker build and compose up Pipeline job completed !&quot;
                &apos;&apos;&apos;
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>